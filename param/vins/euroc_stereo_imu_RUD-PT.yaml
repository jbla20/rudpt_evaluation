%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1
num_of_cam: 2

imu_topic: "/imu0"
image0_topic: "/cam0/image_raw"
image1_topic: "/cam1/image_raw"
# output_path: "~/output/"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 960
image_height: 540


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.00893882615463667, 0.9998818394092135, -0.012506182735929808, 0.003367236070342833,
          0.9999483305841648, -0.008877477268672418, 0.004952429634616613, -0.04112774642642631,
          0.004840821099649079, -0.012549805456320423, -0.9999095303246637, -0.06508072673558303,
          0.0, 0.0, 0.0, 1.0]
  #  [ 0.00893883,  0.99994833,  0.00484082, 0.04141057,
  #          0.99988184, -0.00887748, -0.01254981, -0.0045487,
  #         -0.01250618,  0.00495243, -0.99990953, -0.06482905,
  #          0, 0, 0, 1]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.018844704453347943, 0.9991904949011085, 0.035541975372006825, -0.08683694333448921,
          0.9996551998863897, -0.018179511368899077, -0.018946944515955716, -0.04033893001186847,
          -0.018285471122413098, 0.03588677006455778, -0.9991885614238012, -0.064736516072451,
          0.0, 0.0, 0.0, 1.0]
  #  [ 0.0188447044533479,  0.999655199886389,  -0.0182854711224131,  0.0407776999817796,
  #          0.999190494901108,  -0.0181795113688991,  0.0358867700645578,  0.0883564908164004,
  #          0.0355419753720068, -0.0189469445159557, -0.999188561423801,  -0.0623619293334142,
  #          0, 0, 0, 1]


#Multiple thread support
multiple_thread: 0

#feature traker paprameters
max_cnt: 180            # max feature number in feature tracking
min_dist: 10            # min distance between two features 
freq: 30                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 6.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.16  # max solver itration time (ms), to guarantee real time
max_num_iterations: 32   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.00629031243          # accelerometer measurement noise standard deviation. 
gyr_n: 0.00075175083         # gyroscope measurement noise standard deviation.     
acc_w: 0.00190928453        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.00043257797       # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.05389058151757878                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
